Database transactions

A transaction is a sequence of operations performed as a single logical unit of work within a database management system (or similar)
against a database, and treated in a coherent and reliable way independent of other transactions. A transaction generally represents
any change in database. Transactions in a database environment have two main purposes:
	- to provide reliable units of work that allow correct recovery from failures and keep a database consistent even in cases of system
	  failure, when execution stops (completely or partially) and many operations upon a database remain uncompleted, with unclear status;
	- to provide isolation between programs accessing a database concurrently. If this isolation is not provided, the program's outcome
	  are possibly erroneous.
	  
ACID transaction

A logical unit of work must exhibit four properties, called the atomicity, consistency, isolation, and durability properties, to qualify
as a transaction.  Database practitioners often refer to these properties of database transactions using the acronym ACID.
	- Atomicity: a transaction must be an atomic unit of work; either all of its data modifications are performed, or none of them is performed.
	- Consistency: when completed, a transaction must leave all data in a consistent state. In a relational database, all rules must be applied
	  to the transaction's modifications to maintain all data integrity. All internal data structures, such as B-tree indexes or doubly-linked lists,
	  must be correct at the end of the transaction.
	- Isolation: modifications made by concurrent transactions must be isolated from the modifications made by any other concurrent
	  transactions. A transaction either recognizes data in the state it was in before another concurrent transaction modified it, or it recognizes
	  the data after the second transaction has completed, but it does not recognize an intermediate state. This is referred to as serializability
	  because it results in the ability to reload the starting data and replay a series of transactions to end up with the data in the same state it
	  was in after the original transactions were performed.
	- Durability: after a transaction has completed, its effects are permanently in place in the system. The modifications persist even in the
	  event of a system failure.

Transaction log

A transaction log is a sequential record of all changes made to the database while the actual data is contained in a separate file. The
transaction log contains enough information to undo all changes made to the data file as part of any individual transaction. The log records
the start of a transaction, all the changes considered to be a part of it, and then the final commit or rollback of the transaction. Each database
has at least one physical transaction log and one data file that is exclusive to the database for which it was created.